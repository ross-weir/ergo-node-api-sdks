/*
 * Ergo Node API
 *
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 4.0.15
 * Contact: ergoplatform@protonmail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ErgoNode.Api;
using ErgoNode.Model;
using ErgoNode.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ErgoNode.Test.Model
{
    /// <summary>
    ///  Class for testing NodeInfo
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class NodeInfoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for NodeInfo
        //private NodeInfo instance;

        public NodeInfoTests()
        {
            // TODO uncomment below to create an instance of NodeInfo
            //instance = new NodeInfo();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of NodeInfo
        /// </summary>
        [Fact]
        public void NodeInfoInstanceTest()
        {
            // TODO uncomment below to test "IsType" NodeInfo
            //Assert.IsType<NodeInfo>(instance);
        }


        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'AppVersion'
        /// </summary>
        [Fact]
        public void AppVersionTest()
        {
            // TODO unit test for the property 'AppVersion'
        }
        /// <summary>
        /// Test the property 'FullHeight'
        /// </summary>
        [Fact]
        public void FullHeightTest()
        {
            // TODO unit test for the property 'FullHeight'
        }
        /// <summary>
        /// Test the property 'HeadersHeight'
        /// </summary>
        [Fact]
        public void HeadersHeightTest()
        {
            // TODO unit test for the property 'HeadersHeight'
        }
        /// <summary>
        /// Test the property 'BestFullHeaderId'
        /// </summary>
        [Fact]
        public void BestFullHeaderIdTest()
        {
            // TODO unit test for the property 'BestFullHeaderId'
        }
        /// <summary>
        /// Test the property 'PreviousFullHeaderId'
        /// </summary>
        [Fact]
        public void PreviousFullHeaderIdTest()
        {
            // TODO unit test for the property 'PreviousFullHeaderId'
        }
        /// <summary>
        /// Test the property 'BestHeaderId'
        /// </summary>
        [Fact]
        public void BestHeaderIdTest()
        {
            // TODO unit test for the property 'BestHeaderId'
        }
        /// <summary>
        /// Test the property 'StateRoot'
        /// </summary>
        [Fact]
        public void StateRootTest()
        {
            // TODO unit test for the property 'StateRoot'
        }
        /// <summary>
        /// Test the property 'StateType'
        /// </summary>
        [Fact]
        public void StateTypeTest()
        {
            // TODO unit test for the property 'StateType'
        }
        /// <summary>
        /// Test the property 'StateVersion'
        /// </summary>
        [Fact]
        public void StateVersionTest()
        {
            // TODO unit test for the property 'StateVersion'
        }
        /// <summary>
        /// Test the property 'IsMining'
        /// </summary>
        [Fact]
        public void IsMiningTest()
        {
            // TODO unit test for the property 'IsMining'
        }
        /// <summary>
        /// Test the property 'PeersCount'
        /// </summary>
        [Fact]
        public void PeersCountTest()
        {
            // TODO unit test for the property 'PeersCount'
        }
        /// <summary>
        /// Test the property 'UnconfirmedCount'
        /// </summary>
        [Fact]
        public void UnconfirmedCountTest()
        {
            // TODO unit test for the property 'UnconfirmedCount'
        }
        /// <summary>
        /// Test the property 'Difficulty'
        /// </summary>
        [Fact]
        public void DifficultyTest()
        {
            // TODO unit test for the property 'Difficulty'
        }
        /// <summary>
        /// Test the property 'CurrentTime'
        /// </summary>
        [Fact]
        public void CurrentTimeTest()
        {
            // TODO unit test for the property 'CurrentTime'
        }
        /// <summary>
        /// Test the property 'LaunchTime'
        /// </summary>
        [Fact]
        public void LaunchTimeTest()
        {
            // TODO unit test for the property 'LaunchTime'
        }
        /// <summary>
        /// Test the property 'HeadersScore'
        /// </summary>
        [Fact]
        public void HeadersScoreTest()
        {
            // TODO unit test for the property 'HeadersScore'
        }
        /// <summary>
        /// Test the property 'FullBlocksScore'
        /// </summary>
        [Fact]
        public void FullBlocksScoreTest()
        {
            // TODO unit test for the property 'FullBlocksScore'
        }
        /// <summary>
        /// Test the property 'GenesisBlockId'
        /// </summary>
        [Fact]
        public void GenesisBlockIdTest()
        {
            // TODO unit test for the property 'GenesisBlockId'
        }
        /// <summary>
        /// Test the property 'Parameters'
        /// </summary>
        [Fact]
        public void ParametersTest()
        {
            // TODO unit test for the property 'Parameters'
        }

    }

}
