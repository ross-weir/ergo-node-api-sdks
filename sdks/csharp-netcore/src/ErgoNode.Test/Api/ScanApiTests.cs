/*
 * Ergo Node API
 *
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 4.0.15
 * Contact: ergoplatform@protonmail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ErgoNode.Client;
using ErgoNode.Api;
// uncomment below to import models
//using ErgoNode.Model;

namespace ErgoNode.Test.Api
{
    /// <summary>
    ///  Class for testing ScanApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ScanApiTests : IDisposable
    {
        private ScanApi instance;

        public ScanApiTests()
        {
            instance = new ScanApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ScanApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ScanApi
            //Assert.IsType<ScanApi>(instance);
        }

        /// <summary>
        /// Test AddBox
        /// </summary>
        [Fact]
        public void AddBoxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ScanIdsBox scanIdsBox = null;
            //var response = instance.AddBox(scanIdsBox);
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test DeregisterScan
        /// </summary>
        [Fact]
        public void DeregisterScanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ScanId scanId = null;
            //var response = instance.DeregisterScan(scanId);
            //Assert.IsType<ScanId>(response);
        }

        /// <summary>
        /// Test ListAllScans
        /// </summary>
        [Fact]
        public void ListAllScansTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ListAllScans();
            //Assert.IsType<List<Scan>>(response);
        }

        /// <summary>
        /// Test ListUnspentScans
        /// </summary>
        [Fact]
        public void ListUnspentScansTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int scanId = null;
            //int? minConfirmations = null;
            //int? minInclusionHeight = null;
            //var response = instance.ListUnspentScans(scanId, minConfirmations, minInclusionHeight);
            //Assert.IsType<List<WalletBox>>(response);
        }

        /// <summary>
        /// Test RegisterScan
        /// </summary>
        [Fact]
        public void RegisterScanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ScanRequest scanRequest = null;
            //var response = instance.RegisterScan(scanRequest);
            //Assert.IsType<ScanId>(response);
        }

        /// <summary>
        /// Test ScanStopTracking
        /// </summary>
        [Fact]
        public void ScanStopTrackingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ScanIdBoxId scanIdBoxId = null;
            //var response = instance.ScanStopTracking(scanIdBoxId);
            //Assert.IsType<ScanIdBoxId>(response);
        }
    }
}
