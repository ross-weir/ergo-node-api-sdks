/*
 * Ergo Node API
 *
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 4.0.15
 * Contact: ergoplatform@protonmail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ErgoNode.Client;
using ErgoNode.Api;
// uncomment below to import models
//using ErgoNode.Model;

namespace ErgoNode.Test.Api
{
    /// <summary>
    ///  Class for testing TransactionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TransactionsApiTests : IDisposable
    {
        private TransactionsApi instance;

        public TransactionsApiTests()
        {
            instance = new TransactionsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TransactionsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' TransactionsApi
            //Assert.IsType<TransactionsApi>(instance);
        }

        /// <summary>
        /// Test CheckTransaction
        /// </summary>
        [Fact]
        public void CheckTransactionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ErgoTransaction ergoTransaction = null;
            //var response = instance.CheckTransaction(ergoTransaction);
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test GetExpectedWaitTime
        /// </summary>
        [Fact]
        public void GetExpectedWaitTimeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int fee = null;
            //int txSize = null;
            //var response = instance.GetExpectedWaitTime(fee, txSize);
            //Assert.IsType<int>(response);
        }

        /// <summary>
        /// Test GetFeeHistogram
        /// </summary>
        [Fact]
        public void GetFeeHistogramTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? bins = null;
            //long? maxtime = null;
            //var response = instance.GetFeeHistogram(bins, maxtime);
            //Assert.IsType<List<FeeHistogramBin>>(response);
        }

        /// <summary>
        /// Test GetRecommendedFee
        /// </summary>
        [Fact]
        public void GetRecommendedFeeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int waitTime = null;
            //int txSize = null;
            //var response = instance.GetRecommendedFee(waitTime, txSize);
            //Assert.IsType<int>(response);
        }

        /// <summary>
        /// Test GetUnconfirmedTransactions
        /// </summary>
        [Fact]
        public void GetUnconfirmedTransactionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? limit = null;
            //int? offset = null;
            //var response = instance.GetUnconfirmedTransactions(limit, offset);
            //Assert.IsType<List<ErgoTransaction>>(response);
        }

        /// <summary>
        /// Test SendTransaction
        /// </summary>
        [Fact]
        public void SendTransactionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ErgoTransaction ergoTransaction = null;
            //var response = instance.SendTransaction(ergoTransaction);
            //Assert.IsType<string>(response);
        }
    }
}
